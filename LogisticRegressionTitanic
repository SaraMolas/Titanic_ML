{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2fbefafd",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:40.970295Z",
     "iopub.status.busy": "2024-05-01T17:34:40.969641Z",
     "iopub.status.idle": "2024-05-01T17:34:42.105163Z",
     "shell.execute_reply": "2024-05-01T17:34:42.103636Z"
    },
    "papermill": {
     "duration": 1.151542,
     "end_time": "2024-05-01T17:34:42.107882",
     "exception": false,
     "start_time": "2024-05-01T17:34:40.956340",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/titanic/train.csv\n",
      "/kaggle/input/titanic/test.csv\n",
      "/kaggle/input/titanic/gender_submission.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3de273f0",
   "metadata": {
    "papermill": {
     "duration": 0.009799,
     "end_time": "2024-05-01T17:34:42.127993",
     "exception": false,
     "start_time": "2024-05-01T17:34:42.118194",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**STEP 1: IMPORT PACKAGES AND LOAD DATA**\n",
    "\n",
    "The first step is to import the packages that will be used to manipulate and explore the data, as well as the desired machine learning model to test. \n",
    "We also need to load the training and test datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "35254913",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:42.150953Z",
     "iopub.status.busy": "2024-05-01T17:34:42.150403Z",
     "iopub.status.idle": "2024-05-01T17:34:44.653218Z",
     "shell.execute_reply": "2024-05-01T17:34:44.651854Z"
    },
    "papermill": {
     "duration": 2.518456,
     "end_time": "2024-05-01T17:34:44.656557",
     "exception": false,
     "start_time": "2024-05-01T17:34:42.138101",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 1.1. Import required packages that will be used later\n",
    "\n",
    "# Import several Python packages used for ploting figures\n",
    "import seaborn as sns # to make figures\n",
    "from IPython.display import display # to display multiple seaborn figures generated in the same notebook cell\n",
    "import matplotlib.pyplot as plt # to make some plots and display multiple seaborn figures generated in the same notebook cell\n",
    "\n",
    "# Import packages to model data from Scikit-Learn\n",
    "from sklearn.linear_model import LogisticRegression # Logistic regression package\n",
    "from sklearn.ensemble import RandomForestClassifier # Random forest classifier package\n",
    "from sklearn.model_selection import RepeatedStratifiedKFold, GridSearchCV\n",
    "from sklearn.preprocessing import StandardScaler # to scale variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "33f7db1f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:44.681744Z",
     "iopub.status.busy": "2024-05-01T17:34:44.680244Z",
     "iopub.status.idle": "2024-05-01T17:34:44.740107Z",
     "shell.execute_reply": "2024-05-01T17:34:44.739062Z"
    },
    "papermill": {
     "duration": 0.075158,
     "end_time": "2024-05-01T17:34:44.743036",
     "exception": false,
     "start_time": "2024-05-01T17:34:44.667878",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loaded datasets\n"
     ]
    }
   ],
   "source": [
    "# 1.2. Import the Titanic datasets\n",
    "# When working with data, typically the dataset needs to be split into a training dataset to fit the model and a test dataset to validate the model.\n",
    "# In this case, Kaggle has already split the data, so we will import the training and test dataset separately\n",
    "\n",
    "trainSet = pd.read_csv('/kaggle/input/titanic/train.csv') # Import training set\n",
    "testSet = pd.read_csv('/kaggle/input/titanic/test.csv') # Import test set\n",
    "print('Loaded datasets') # display a message to confirm that the data has been loaded"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "208cf5ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:44.769863Z",
     "iopub.status.busy": "2024-05-01T17:34:44.768960Z",
     "iopub.status.idle": "2024-05-01T17:34:44.792414Z",
     "shell.execute_reply": "2024-05-01T17:34:44.791455Z"
    },
    "papermill": {
     "duration": 0.041726,
     "end_time": "2024-05-01T17:34:44.795472",
     "exception": false,
     "start_time": "2024-05-01T17:34:44.753746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   PassengerId  Survived  Pclass  \\\n",
      "0            1         0       3   \n",
      "1            2         1       1   \n",
      "2            3         1       3   \n",
      "3            4         1       1   \n",
      "4            5         0       3   \n",
      "\n",
      "                                                Name     Sex   Age  SibSp  \\\n",
      "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
      "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
      "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
      "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
      "4                           Allen, Mr. William Henry    male  35.0      0   \n",
      "\n",
      "   Parch            Ticket     Fare Cabin Embarked  \n",
      "0      0         A/5 21171   7.2500   NaN        S  \n",
      "1      0          PC 17599  71.2833   C85        C  \n",
      "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
      "3      0            113803  53.1000  C123        S  \n",
      "4      0            373450   8.0500   NaN        S  \n",
      "training data shape: (891, 12)\n"
     ]
    }
   ],
   "source": [
    "# 1.3. Obtain basic information about the training data \n",
    "print(trainSet.head()) # get the names of the columns of the dataset, that will constitute the variables or features of our model, and the first 5 rows of data\n",
    "print('training data shape:', trainSet.shape) # get the shape(rows,columns) of the training dataset. rows = samples, columns = variables"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43b1aa31",
   "metadata": {
    "papermill": {
     "duration": 0.009959,
     "end_time": "2024-05-01T17:34:44.816643",
     "exception": false,
     "start_time": "2024-05-01T17:34:44.806684",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**STEP 2: EXPLORE THE DATA**\n",
    "\n",
    "Before training a Machine Learning model, it is useful to explore the data, visualizing the different variables against the output. This will help us understand which variables are more important, in other words, are better predictors of the output. This information might be used later to improve our model. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "22854b99",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:44.840896Z",
     "iopub.status.busy": "2024-05-01T17:34:44.839653Z",
     "iopub.status.idle": "2024-05-01T17:34:47.509795Z",
     "shell.execute_reply": "2024-05-01T17:34:47.508596Z"
    },
    "papermill": {
     "duration": 2.684656,
     "end_time": "2024-05-01T17:34:47.512665",
     "exception": false,
     "start_time": "2024-05-01T17:34:44.828009",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2. Let's explore the data to get an idea of the relevance of each variable: plots of each variable(or features) against output (= survival)\n",
    "# ignore full name, ticket number and cabin number for now\n",
    "\n",
    "sns.barplot(trainSet, x = 'Pclass', y = 'Survived')\n",
    "plt.show()\n",
    "sns.barplot(trainSet, x = 'Sex', y = 'Survived')\n",
    "plt.show()\n",
    "sns.violinplot(trainSet, x = 'Survived', y = 'Age')\n",
    "plt.show()\n",
    "sns.barplot(trainSet, x = 'SibSp', y = 'Survived')\n",
    "plt.show()\n",
    "sns.barplot(trainSet, x = 'Parch', y = 'Survived')\n",
    "plt.show()\n",
    "sns.violinplot(trainSet, x = 'Survived', y = 'Fare')\n",
    "plt.show()\n",
    "sns.barplot(trainSet, x = 'Embarked', y = 'Survived')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7409964",
   "metadata": {
    "papermill": {
     "duration": 0.012454,
     "end_time": "2024-05-01T17:34:47.538128",
     "exception": false,
     "start_time": "2024-05-01T17:34:47.525674",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "These plots suggest that women and passengers in the first class (higher socioeconomic status) were more likely to survive (0 = did not survive, 1 = survived). "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "706bc642",
   "metadata": {
    "papermill": {
     "duration": 0.013074,
     "end_time": "2024-05-01T17:34:47.565259",
     "exception": false,
     "start_time": "2024-05-01T17:34:47.552185",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**STEP 3: DATA ENGINEERING**\n",
    "\n",
    "There might be some variables that contain missing values (NaN) in some entries. If that is the case, since ML models do not accept missing values we either have to drop those samples, which will reduce the amount of data available for training and increase noise, or we can replace those missing values by an estimate of the most likely value based on other variables. \n",
    "\n",
    "In addition, as displayed in Step 1, some variables in the dataset are categorical. However, logistic regression only accepts numerical variables. Thus, we need to convert all categorical variables in the dataset into numerical ones. \n",
    "\n",
    "We need to do the same modifications in both the training and test datasets. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "63c19170",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:47.594787Z",
     "iopub.status.busy": "2024-05-01T17:34:47.594300Z",
     "iopub.status.idle": "2024-05-01T17:34:47.604874Z",
     "shell.execute_reply": "2024-05-01T17:34:47.603383Z"
    },
    "papermill": {
     "duration": 0.028436,
     "end_time": "2024-05-01T17:34:47.607582",
     "exception": false,
     "start_time": "2024-05-01T17:34:47.579146",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "column with nans:  Age\n",
      "column with nans:  Cabin\n",
      "column with nans:  Embarked\n"
     ]
    }
   ],
   "source": [
    "# 3.1. Let's see if there is any column in the dataframe with NaN values\n",
    "\n",
    "for column in trainSet: # Iterate over each column in the dataset\n",
    "    if trainSet[column].isnull().any(): # check if the column contains any missing values\n",
    "        print('column with nans: ',column) # if the column contains missing values, print the column name"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfffb60f",
   "metadata": {
    "papermill": {
     "duration": 0.012663,
     "end_time": "2024-05-01T17:34:47.633754",
     "exception": false,
     "start_time": "2024-05-01T17:34:47.621091",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "According to the output from the above cell, the variables Age, Cabin and Embarked contain NaNs. We are going to use the Age and Embarked variable for our model, but we are not going to use the Cabin number. Thus, we only need to replace the missing values in the Age and Embarked columns. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "097731b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:47.663147Z",
     "iopub.status.busy": "2024-05-01T17:34:47.662714Z",
     "iopub.status.idle": "2024-05-01T17:34:48.120653Z",
     "shell.execute_reply": "2024-05-01T17:34:48.119450Z"
    },
    "papermill": {
     "duration": 0.475573,
     "end_time": "2024-05-01T17:34:48.123060",
     "exception": false,
     "start_time": "2024-05-01T17:34:47.647487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 3.2.1. We could just replace the missing values by the median age of all passengers. However, just in case, let's investigate \n",
    "# if there are differences in passenger's age depending on gender and socioeconomic status \n",
    "\n",
    "sns.violinplot(trainSet, x = 'Sex', y = 'Age', hue='Pclass')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d128cdb",
   "metadata": {
    "papermill": {
     "duration": 0.014015,
     "end_time": "2024-05-01T17:34:48.151085",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.137070",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "As shown in this plot, males tended to be older than females. In addition, people from class 1 tended to be older than passengers in classes 2 and 3. Thus, we should replace the missing values in the 'Age' variable by the median of the passenger's sex & class group."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6ec76bed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.182393Z",
     "iopub.status.busy": "2024-05-01T17:34:48.181928Z",
     "iopub.status.idle": "2024-05-01T17:34:48.195754Z",
     "shell.execute_reply": "2024-05-01T17:34:48.194677Z"
    },
    "papermill": {
     "duration": 0.03349,
     "end_time": "2024-05-01T17:34:48.198448",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.164958",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 3.2.2. Replace missing values in Age column with the median of the passengers sex and class group\n",
    "\n",
    "trainSet['Age'] = trainSet['Age'].fillna(trainSet.groupby(['Pclass', 'Sex'])['Age'].transform('median'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ae5df1aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.231160Z",
     "iopub.status.busy": "2024-05-01T17:34:48.230437Z",
     "iopub.status.idle": "2024-05-01T17:34:48.525092Z",
     "shell.execute_reply": "2024-05-01T17:34:48.523596Z"
    },
    "papermill": {
     "duration": 0.315191,
     "end_time": "2024-05-01T17:34:48.528025",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.212834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 3.3.1. Some values in the Embarkment variable are missing too, let's check if the Embarkment site varied depending on \n",
    "# socioeconomic status (for instance richer passengers might leave in areas different to working class passengers)\n",
    "\n",
    "sns.countplot(trainSet, x = 'Embarked', hue='Pclass')\n",
    "#a.set_yticks(range(5))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67299976",
   "metadata": {
    "papermill": {
     "duration": 0.014184,
     "end_time": "2024-05-01T17:34:48.556652",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.542468",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For all passenger classes, the most common embarkment site is 'S'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dd3cc3ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.588649Z",
     "iopub.status.busy": "2024-05-01T17:34:48.587471Z",
     "iopub.status.idle": "2024-05-01T17:34:48.595737Z",
     "shell.execute_reply": "2024-05-01T17:34:48.594613Z"
    },
    "papermill": {
     "duration": 0.02743,
     "end_time": "2024-05-01T17:34:48.598201",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.570771",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 3.3.2. We'll replace the Embarked missing values by the most common embarkment site of each passenger class\n",
    "\n",
    "trainSet['Embarked'] = trainSet['Embarked'].fillna(trainSet['Embarked'].mode().iloc[0]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d0206e55",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.629405Z",
     "iopub.status.busy": "2024-05-01T17:34:48.628624Z",
     "iopub.status.idle": "2024-05-01T17:34:48.637744Z",
     "shell.execute_reply": "2024-05-01T17:34:48.636336Z"
    },
    "papermill": {
     "duration": 0.027952,
     "end_time": "2024-05-01T17:34:48.640523",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.612571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "column with nans:  Age\n",
      "column with nans:  Fare\n",
      "column with nans:  Cabin\n"
     ]
    }
   ],
   "source": [
    "# 3.4. Let's see if there is any column in the dataframe with NaN values\n",
    "\n",
    "for column in testSet: # Iterate over each column in the dataset\n",
    "    if testSet[column].isnull().any(): # check if the column contains any missing values\n",
    "        print('column with nans: ',column) # if the column contains missing values, print the column name"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9e46120",
   "metadata": {
    "papermill": {
     "duration": 0.013937,
     "end_time": "2024-05-01T17:34:48.668621",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.654684",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In the test dataset, Age, Fare and Cabin variables contains missing values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e85154c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.699544Z",
     "iopub.status.busy": "2024-05-01T17:34:48.698524Z",
     "iopub.status.idle": "2024-05-01T17:34:48.708575Z",
     "shell.execute_reply": "2024-05-01T17:34:48.707228Z"
    },
    "papermill": {
     "duration": 0.028493,
     "end_time": "2024-05-01T17:34:48.711334",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.682841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 3.5.1. Replace missing values in Age column with the median of the passengers sex and class group\n",
    "\n",
    "testSet['Age'] = testSet['Age'].fillna(testSet.groupby(['Pclass', 'Sex'])['Age'].transform('median'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c25734a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:48.743050Z",
     "iopub.status.busy": "2024-05-01T17:34:48.742112Z",
     "iopub.status.idle": "2024-05-01T17:34:49.089012Z",
     "shell.execute_reply": "2024-05-01T17:34:49.087774Z"
    },
    "papermill": {
     "duration": 0.365638,
     "end_time": "2024-05-01T17:34:49.091419",
     "exception": false,
     "start_time": "2024-05-01T17:34:48.725781",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 3.5.2. The fare variable probably depends on the Class, since presumably Class 1 tickets were more expensive than Class 2 and 3. \n",
    "# Let's plot Fare agains Class to confirm this\n",
    "\n",
    "sns.violinplot(testSet, y = 'Fare', x = 'Pclass')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7f2c7d4",
   "metadata": {
    "papermill": {
     "duration": 0.014568,
     "end_time": "2024-05-01T17:34:49.121076",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.106508",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "It looks like passengers in Class 1 paid much more than passengers in Class 2 and 3. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5e333daa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.153825Z",
     "iopub.status.busy": "2024-05-01T17:34:49.152988Z",
     "iopub.status.idle": "2024-05-01T17:34:49.159903Z",
     "shell.execute_reply": "2024-05-01T17:34:49.158914Z"
    },
    "papermill": {
     "duration": 0.02635,
     "end_time": "2024-05-01T17:34:49.162587",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.136237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 3.5.3. Let's replace the missing values in the Fare variable by the median fare of each passenger's Class group\n",
    "\n",
    "testSet['Fare'] = testSet['Fare'].fillna(testSet.groupby(['Pclass'])['Fare'].transform('median'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "95541c73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.195775Z",
     "iopub.status.busy": "2024-05-01T17:34:49.194960Z",
     "iopub.status.idle": "2024-05-01T17:34:49.210532Z",
     "shell.execute_reply": "2024-05-01T17:34:49.209251Z"
    },
    "papermill": {
     "duration": 0.03544,
     "end_time": "2024-05-01T17:34:49.213178",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.177738",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/2066842492.py:4: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  trainSet['Sex'] = trainSet['Sex'].replace(['male', 'female'],[0, 1])\n",
      "/tmp/ipykernel_18/2066842492.py:5: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  trainSet['Embarked'] = trainSet['Embarked'].replace(['S', 'C', 'Q'],[0, 1, 2])\n",
      "/tmp/ipykernel_18/2066842492.py:7: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  testSet['Sex'] = testSet['Sex'].replace(['male', 'female'],[0, 1])\n",
      "/tmp/ipykernel_18/2066842492.py:8: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  testSet['Embarked'] = testSet['Embarked'].replace(['S', 'C', 'Q'],[0, 1, 2])\n"
     ]
    }
   ],
   "source": [
    "# 3.6. Since some of the variables are categorical, but we want to trian a logistic regression model, which needs numerical input,\n",
    "# let's transform all categorical variables (Sex and Embarked) into numerical ones in both the train and test datasets\n",
    "\n",
    "trainSet['Sex'] = trainSet['Sex'].replace(['male', 'female'],[0, 1])\n",
    "trainSet['Embarked'] = trainSet['Embarked'].replace(['S', 'C', 'Q'],[0, 1, 2])\n",
    "\n",
    "testSet['Sex'] = testSet['Sex'].replace(['male', 'female'],[0, 1])\n",
    "testSet['Embarked'] = testSet['Embarked'].replace(['S', 'C', 'Q'],[0, 1, 2])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b26fc48",
   "metadata": {
    "papermill": {
     "duration": 0.01457,
     "end_time": "2024-05-01T17:34:49.242697",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.228127",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**STEP 4: TRAIN THE LOGISTIC REGRESSION MODEL**\n",
    "\n",
    "We'll train the model only using the following variables: \n",
    "* Pclass\n",
    "* Sex\n",
    "* Age \n",
    "* Fare, \n",
    "* Embarked, \n",
    "* SibSp (if they traveled with a sibling or spouse) \n",
    "* Parch (if they traveled with a child or parent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "328a5532",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.275937Z",
     "iopub.status.busy": "2024-05-01T17:34:49.274651Z",
     "iopub.status.idle": "2024-05-01T17:34:49.328802Z",
     "shell.execute_reply": "2024-05-01T17:34:49.327160Z"
    },
    "papermill": {
     "duration": 0.073203,
     "end_time": "2024-05-01T17:34:49.331524",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.258321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     PassengerId  Survived\n",
      "0            892         0\n",
      "1            893         0\n",
      "2            894         0\n",
      "3            895         0\n",
      "4            896         1\n",
      "..           ...       ...\n",
      "413         1305         0\n",
      "414         1306         1\n",
      "415         1307         0\n",
      "416         1308         0\n",
      "417         1309         0\n",
      "\n",
      "[418 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "# 4.1. First let's see how a simple logistic regression model does. Let's use all the variables plotted for now. \n",
    "# Let's fit the model\n",
    "model = LogisticRegression(max_iter = 200)\n",
    "model.fit(trainSet.loc[:,['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch']], trainSet['Survived'])\n",
    "\n",
    "# then let's get the model's accuracy\n",
    "predY = model.predict(testSet.loc[:,['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch']])\n",
    "\n",
    "# save prediction\n",
    "outcome = pd.DataFrame({'PassengerId': testSet['PassengerId'].values,'Survived': predY})\n",
    "outcome.to_csv('outcome.csv', index=False)  \n",
    "print(outcome)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f4a5fa6",
   "metadata": {
    "papermill": {
     "duration": 0.014889,
     "end_time": "2024-05-01T17:34:49.362116",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.347227",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This approach resulted in a prediction accuracy of **0.76076**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56b3c091",
   "metadata": {
    "papermill": {
     "duration": 0.014947,
     "end_time": "2024-05-01T17:34:49.392087",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.377140",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To improve the performance of the model, and help reach convergence faster, in less than 100 iterations, let's scale the data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "17f6c1fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.424784Z",
     "iopub.status.busy": "2024-05-01T17:34:49.424293Z",
     "iopub.status.idle": "2024-05-01T17:34:49.437339Z",
     "shell.execute_reply": "2024-05-01T17:34:49.436412Z"
    },
    "papermill": {
     "duration": 0.032585,
     "end_time": "2024-05-01T17:34:49.440240",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.407655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 4.2.1. We could use the minmaxscaler function, which sets the minimum to 0 and the maximum to 1. However, as we saw that we have some outliers, \n",
    "# for instance in the Fare variable, we will use the standard scaler which sets mean to 0 and std to 1. \n",
    "\n",
    "std_scaler = StandardScaler() # initialize standard scaler\n",
    " \n",
    "df_scaled = std_scaler.fit_transform(trainSet.loc[:,['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch']].to_numpy())\n",
    "trainScaled = pd.DataFrame(df_scaled, columns=['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch'])# scale training dataset\n",
    "\n",
    "df_scaled = std_scaler.fit_transform(testSet.loc[:,['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch']].to_numpy())\n",
    "testScaled = pd.DataFrame(df_scaled, columns=['Pclass','Sex', 'Age','Fare','Embarked', 'SibSp', 'Parch'])# scale test dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b2ca2b12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.474109Z",
     "iopub.status.busy": "2024-05-01T17:34:49.473312Z",
     "iopub.status.idle": "2024-05-01T17:34:49.494472Z",
     "shell.execute_reply": "2024-05-01T17:34:49.493418Z"
    },
    "papermill": {
     "duration": 0.041092,
     "end_time": "2024-05-01T17:34:49.497111",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.456019",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     PassengerId  Survived\n",
      "0            892         0\n",
      "1            893         0\n",
      "2            894         0\n",
      "3            895         0\n",
      "4            896         1\n",
      "..           ...       ...\n",
      "413         1305         0\n",
      "414         1306         1\n",
      "415         1307         0\n",
      "416         1308         0\n",
      "417         1309         0\n",
      "\n",
      "[418 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "# 4.2.2. Let's train the model and test its accuracy with the scaled variables\n",
    "\n",
    "model = LogisticRegression(max_iter = 100) # initialize model\n",
    "model.fit(trainScaled, trainSet['Survived']) # train model\n",
    "predY = model.predict(testScaled) # make prediction\n",
    "\n",
    "# save prediction\n",
    "outcome = pd.DataFrame({'PassengerId': testSet['PassengerId'].values,'Survived': predY})\n",
    "outcome.to_csv('outcome2.csv', index=False)  \n",
    "print(outcome)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65d1859f",
   "metadata": {
    "papermill": {
     "duration": 0.015141,
     "end_time": "2024-05-01T17:34:49.527761",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.512620",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Scaling the data resulted in slight accuracy increase to: **0.76555**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7c6d3aae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:49.561533Z",
     "iopub.status.busy": "2024-05-01T17:34:49.561061Z",
     "iopub.status.idle": "2024-05-01T17:34:52.273326Z",
     "shell.execute_reply": "2024-05-01T17:34:52.271918Z"
    },
    "papermill": {
     "duration": 2.732501,
     "end_time": "2024-05-01T17:34:52.275837",
     "exception": false,
     "start_time": "2024-05-01T17:34:49.543336",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 15 folds for each of 24 candidates, totalling 360 fits\n",
      "Best Hyperparameters: {'C': 10, 'penalty': 'l1', 'solver': 'saga'}\n"
     ]
    }
   ],
   "source": [
    "# 4.3. Finally, it's time for some HYPERPARAMETER OPTIMIZATION. Let's find the hyperparameters of the model that result in best\n",
    "# model performance. In other words, the ones that have the best bias-variance tradeoff.\n",
    "\n",
    "# Initialize model\n",
    "model = LogisticRegression()\n",
    "\n",
    "# Define evaluation\n",
    "cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n",
    "\n",
    "# Set hyperparameters grid\n",
    "param_grid = {\n",
    "    'penalty': ['l1', 'l2'],      # Regularization term\n",
    "    'C': [0.001, 0.01, 0.1, 1, 10, 100],  # Inverse of regularization strength\n",
    "    'solver': ['liblinear', 'saga']      # Optimization algorithm\n",
    "}\n",
    "\n",
    "# Define search\n",
    "grid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=cv, scoring='accuracy', verbose=1) \n",
    "\n",
    "# Train model and iterate over hyperparameters\n",
    "grid_search.fit(trainScaled, trainSet['Survived'])\n",
    "\n",
    "# Extract the best model and its parameters\n",
    "best_params = grid_search.best_params_\n",
    "best_model = grid_search.best_estimator_\n",
    "print(\"Best Hyperparameters:\", best_params)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36b411b8",
   "metadata": {
    "papermill": {
     "duration": 0.015988,
     "end_time": "2024-05-01T17:34:52.307431",
     "exception": false,
     "start_time": "2024-05-01T17:34:52.291443",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Best hyperparameters were: C = 0.01, penalty = L2, solver = saga"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c461e1d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:34:52.341532Z",
     "iopub.status.busy": "2024-05-01T17:34:52.341069Z",
     "iopub.status.idle": "2024-05-01T17:34:52.351543Z",
     "shell.execute_reply": "2024-05-01T17:34:52.350359Z"
    },
    "papermill": {
     "duration": 0.031315,
     "end_time": "2024-05-01T17:34:52.354454",
     "exception": false,
     "start_time": "2024-05-01T17:34:52.323139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Use the best model to predict\n",
    "predY = best_model.predict(testScaled)\n",
    "\n",
    "# Save prediction\n",
    "outcome = pd.DataFrame({'PassengerId': testSet['PassengerId'].values,'Survived': predY})\n",
    "outcome.to_csv('outcome3.csv', index=False)  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2188bba3",
   "metadata": {
    "papermill": {
     "duration": 0.016281,
     "end_time": "2024-05-01T17:34:52.386636",
     "exception": false,
     "start_time": "2024-05-01T17:34:52.370355",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "After **hyperparameter optimization**, the accuracy increased to **0.77511**"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 15.610111,
   "end_time": "2024-05-01T17:34:53.125757",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-01T17:34:37.515646",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
